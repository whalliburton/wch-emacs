[[https://travis-ci.org/justbur/evil-magit][file:https://travis-ci.org/justbur/evil-magit.svg?branch=master]] [[http://melpa.org/#/evil-magit][file:http://melpa.org/packages/evil-magit-badge.svg]]

* Black magic

This library configures Magit and Evil to play well with each other. For some
background see [[https://github.com/justbur/evil-magit/issues/1][Issue #1]].

*Note*: I intend to track the latest commits to the master branch of the [[https://github.com/magit/magit][magit
repo]], meaning the keybindings here are potentially ahead of the last stable
release of magit. Once the code in evil-magit stabilizes, I may switch to
primarily tracking the stable release of magit and secondarily track the latest
commits to master. Any help is welcomed.

* Recent Changes (most recent first)

1. =evil-magit-use-y-for-yank= is now the default. It has worked well for me so
   far, and I've had good feedback, but please let me know if you see issues.
   You can use the original behavior with =(setq evil-magit-use-y-for-yank
   nil)=. See the table below for a summary of differences.


* Installation and Use

Everything is contained in evil-magit.el, so you may download and load that file
directly. The recommended method is to use MELPA via package.el (=M-x
package-install RET evil-magit RET=).

Evil and Magit are both required. After requiring those packages, the following
will setup the new key bindings for you.

#+BEGIN_SRC emacs-lisp
;; optional: this is the evil state that evil-magit will use
;; (setq evil-magit-state 'normal)
;; optional: disable additional bindings for yanking text
;; (setq evil-magit-use-y-for-yank nil)
(require 'evil-magit)
#+END_SRC emacs-lisp

** Note on evil usage
This package assumes that you either use the global variant of evil mode (e.g.,
through =(evil-mode 1)=), or at least have =evil-local-mode= (the local variant)
enabled in the magit buffers you want these bindings to take effect in. When
evil is disabled in a magit buffer, this package will not affect the default key
bindings (with one minor exception).

** Note on =evil-magit-use-y-for-yank=
=evil-use-y-for-yank= enables evil's visual state for linewise selection, and as
a consequnce =y= will yank text from the buffer.

With this enabled which it is by default evil-magit uses =v= and =V= to select
by line. Selection in magit occurs linewise, so this choice is to avoid
confusion that might arise if someone thought they could stage part of a line
with =v= for example.


* Key Bindings

The basic key binding scheme is described in the following tables. Blank columns
indicate that the key is carried over from the left.

   | Category             | Default | Evil-magit without =y= for yank option | Evil-magit default (with =y= yank) |
   |----------------------+---------+----------------------------------------+------------------------------------|
   | cherry pick          | =a=A=   |                                        |                                    |
   | branch               | =b=     |                                        |                                    |
   | bisect               | =B=     |                                        |                                    |
   | commit               | =c=     |                                        |                                    |
   | diff                 | =d/D=   |                                        |                                    |
   | help                 | =h/?=   |                                        |                                    |
   | ediff                | =e/E=   |                                        |                                    |
   | fetch                | =f=     |                                        |                                    |
   | pull                 | =F=     |                                        |                                    |
   | ignore               | =i/I=   |                                        |                                    |
   | jump                 | =j=     | =g=                                    |                                    |
   | delete               | =k=     | =x=                                    |                                    |
   | untrack              | =K=     | =X=                                    |                                    |
   | log                  | =l/L=   |                                        |                                    |
   | merge                | =m=     |                                        |                                    |
   | remote               | =M=     |                                        |                                    |
   | next section         | =n=     | =C-j=                                  |                                    |
   | next section sibling | =M-n=   | =gj= or =]=                            |                                    |
   | submodule            | =o=     | =>=                                    |                                    |
   | prev section         | =p=     | =C-k=                                  |                                    |
   | prev section sibling | =M-p=   | =gk= or =[=                            |                                    |
   | push                 | =P=     |                                        |                                    |
   | rebase               | =r=     |                                        |                                    |
   | refresh              | =g=     | =gr/gR=                                |                                    |
   | rename               | =R=     |                                        |                                    |
   | stage                | =s/S=   |                                        |                                    |
   | tag                  | =t=     |                                        |                                    |
   | notes                | =T=     |                                        |                                    |
   | unstage              | =u/U=   |                                        |                                    |
   | revert               | =v/V=   | =o/O=                                  |                                    |
   | am                   | =w=     |                                        |                                    |
   | patch                | =W=     |                                        |                                    |
   | reset                | =x=     | =C-r= (=X= in branch popup)            |                                    |
   | show-refs            | =y=     |                                        | =yr= (=y= in popup)                |
   | cherry               | =Y=     |                                        |                                    |
   | stash                | =z/Z=   |                                        |                                    |
   | git-cmd              | =:=     | =Â¦=                                    |                                    |
   | run                  | =!=     |                                        |                                    |
   | copy section info    | =C-w=   |                                        | =ys=                               |
   | copy buffer info     | =M-w=   |                                        | =yb=                               |

** New Commands

   |                           | Evil-Magit without       | Evil-magit default |
   | Command                   | =y= for yank option      | With =y= yank      |
   |---------------------------+--------------------------+--------------------|
   | evil-goto-line            | =G=                      |                    |
   | evil-next-visual-line     | =j=                      |                    |
   | evil-previous-visual-line | =k=                      |                    |
   | evil-search-next          | =n=                      |                    |
   | evil-search-previous      | =N=                      |                    |
   | set-mark-command          | =v= or =V=               | =C-SPC=            |
   | evil-visual-line          | under =M-x=              | =v= or =V=         |
   | evil-ex                   | =:=                      |                    |
   | evil-search-forward       | =/=                      |                    |
   | evil-scroll-page-up       | =C-b=                    |                    |
   | evil-scroll-down          | =C-d=                    |                    |
   | evil-scroll-page-down     | =C-f=                    |                    |
   | evil-scroll-up            | =C-u= (if =C-u= scrolls) |                    |
   | evil-emacs-state          | =C-z=                    |                    |
   | evil-yank-line            | under =M-x=              | =yy=               |


Any other bindings are meant to be consistent with these.

Use =evil-magit-revert= to revert changes made by evil-magit to the default
evil+magit behavior.

** To add other common evil commands

Some may want =?= to search backward instead of launching the popup which is
also bound to =h=. To get this behavior, add the following line after =(require
'evil-magit)= in your configuration.

#+BEGIN_SRC emacs-lisp
(evil-define-key evil-magit-state magit-mode-map "?" 'evil-search-backward)
#+END_SRC

Most (but not all) magit bindings are in =magit-mode-map=, so other commands can
be bound in this way too.

* Known Conflicts

These are the third-party packages that conflict with these bindings and will
probably need to be disabled in magit buffers for evil-magit to work properly.

 1. [[https://github.com/hlissner/evil-snipe][evil-snipe]]
 2. [[https://github.com/syl20bnr/evil-escape][evil-escape]] with [[https://github.com/justbur/evil-magit/issues/4][certain escape sequences]]

* Disclaimer

Given the complexity of magit key bindings combined with the complexity of git
itself, it is possible that there are some rough edges where the current binding
is not the expected one in a buffer. It will be very helpful for you to report
any such instances.
