* to evaluate for emacs
  igrep
  org-tree-slide
  command-log-mode
  site-lisp/ac-slime/
  site-lisp/ace-jump-mode/
  site-lisp/alert/
  site-lisp/auto-complete/
  site-lisp/cask/
  site-lisp/chronos/
  site-lisp/clojure-mode/
  site-lisp/color-identifiers-mode/
  site-lisp/command-log-mode/
  site-lisp/company-mode/
  site-lisp/crux/
  site-lisp/elisp-slime-nav/
  site-lisp/elisp/
  site-lisp/emms/
  site-lisp/evil-org-mode/
  site-lisp/evil-paredit/
  site-lisp/evil-plugins/
  site-lisp/evil-surround/
  site-lisp/expand-region.el/
  site-lisp/guru-mode/
  site-lisp/helm-chronos/
  site-lisp/helm-delicious/
  site-lisp/helm-descbinds/
  site-lisp/helm-dictionary/
  site-lisp/helm-firefox/
  site-lisp/helm-projectile/
  site-lisp/helm-recoll/
  site-lisp/helm-w3m/
  site-lisp/markdown-mode/
  site-lisp/mode-line-color.el
  site-lisp/operate-on-number/
  site-lisp/org-ac/
  site-lisp/org-tree-slide/
  site-lisp/pkg-info.el/
  site-lisp/popup-el/
  site-lisp/rainbow-delimiters/
  site-lisp/rich-minority/
  site-lisp/slime
  site-lisp/smart-mode-line/
  site-lisp/smartrep/
  site-lisp/solarized-emacs/
  site-lisp/spinner.el/
  site-lisp/sr-speedbar/
  site-lisp/wget-log
  site-lisp/writegood-mode/
  site-lisp/yascroll-el/
* completed emacs tasks
** DONE set up math keybindings
<kbd>C-c . +</kbd> | Increment integer at point. Default is +1.
<kbd>C-c . -</kbd> | Decrement integer at point. Default is -1.
<kbd>C-c . *</kbd> | Multiply integer at point. Default is *2.
<kbd>C-c . /</kbd> | Divide integer at point. Default is /2.
<kbd>C-c . \\</kbd> | Modulo integer at point. Default is modulo 2.
<kbd>C-c . ^</kbd> | Power to the integer at point. Default is ^2.
<kbd>C-c . <</kbd> | Left-shift integer at point. Default is 1 position to the left.
<kbd>C-c . ></kbd> | Right-shift integer at point. Default is 1 position to the right.
<kbd>C-c . #</kbd> | Convert integer at point to specified base. Default is 10.
<kbd>C-c . %</kbd> | Replace integer at point with another specified integer.
<kbd>C-c . '</kbd> | Perform arithmetic operations on integer at point. User specifies the operator.
CLOCK: [2016-01-12 Tue 11:28]--[2016-01-12 Tue 11:29] =>  0:01
[2016-01-12 Tue 11:28]
[[file:~/emacs/study/prelude/README.md::<kbd>C-c%20.%20%2B</kbd>%20|%20Increment%20integer%20at%20point.%20Default%20is%20%2B1.][file:~/emacs/study/prelude/README.md::<kbd>C-c . +</kbd> | Increment integer at point. Default is +1.]]
* emacs tasks
** DONE integrate emacs delight
   CLOCK: [2016-01-17 Sun 11:30]--[2016-01-17 Sun 11:31] =>  0:01
   [2016-01-17 Sun 11:30]
   [[git:~/life/worklog.org::master@{2016-01-17}::613]]
   https://github.com/antonio/delight.el
   http://aliquote.org/memos/2015/08/15/why-i-am-still-using-emacs
** TODO Add keybindings
   <kbd>C-c u</kbd> | Open a new buffer containing the contents of URL.
   <kbd>C-c e</kbd> | Eval a bit of Emacs Lisp code and replace it with its result.
   <kbd>C-c s</kbd> | Swap two active windows.
   CLOCK: [2016-01-12 Tue 11:30]--[2016-01-12 Tue 11:31] =>  0:01
   [2016-01-12 Tue 11:30]
   [[file:~/emacs/study/prelude/README.md::<kbd>C-c%20u</kbd>%20|%20Open%20a%20new%20buffer%20containing%20the%20contents%20of%20URL.][file:~/emacs/study/prelude/README.md::<kbd>C-c u</kbd> | Open a new buffer containing the contents of URL.]]
** TODO keybind a shortcut for commenting the current line
   CLOCK: [2016-01-14 Thu 23:23]--[2016-01-14 Thu 23:24] =>  0:01
   CLOCK: [2016-01-14 Thu 23:13]--[2016-01-14 Thu 23:13] =>  0:00
   CLOCK: [2016-01-14 Thu 23:11]--[2016-01-14 Thu 23:13] =>  0:02
   CLOCK: [2016-01-14 Thu 23:09]--[2016-01-14 Thu 23:11] =>  0:02
** TODO evaluate helm function
   CLOCK: [2016-01-14 Thu 23:13]--[2016-01-14 Thu 23:15] =>  0:02
   CLOCK: [2016-01-14 Thu 23:13]--[2016-01-14 Thu 23:13] =>  0:00
   ;; - `find-file'(C-x C-f)           =>`helm-find-files'
   ;; - `occur'(M-s o)                 =>`helm-occur'
   ;; - `list-buffers'(C-x C-b)        =>`helm-buffers-list'
   ;; - `completion-at-point'(M-tab)   =>`helm-lisp-completion-at-point'[1]
   ;; - `dabbrev-expand'(M-/)          =>`helm-dabbrev'
** TODO collect keystroke data from sessions and generate heat map
   CLOCK: [2016-01-17 Sun 10:03]--[2016-01-17 Sun 10:03] =>  0:00
   [2016-01-17 Sun 10:03]
   http://www.drbunsen.org/vim-croquet/
   [[elisp-function::recent-keys]]
   git@github.com:dacap/keyfreq.git
   http://ergoemacs.org/emacs/command-frequency.html
** TODO collect keystroke data from sessions and generate heat map
   CLOCK: [2016-01-17 Sun 10:03]--[2016-01-17 Sun 10:03] =>  0:00
   [2016-01-17 Sun 10:03]
   http://www.drbunsen.org/vim-croquet/
** TODO generate mail statiticts with mu
  CLOCK: [2016-01-17 Sun 11:11]--[2016-01-17 Sun 11:11] =>  0:00
  [2016-01-17 Sun 11:11]
  http://www.djcbsoftware.nl/code/mu/cheatsheet.html
  http://aliquote.org/memos/2014/10/26/collecting-email-usage-statistics-from-mu
#+BEGIN_SRC sh
mu find 'mime:image/*'
** TODO integrate inbox.el into the modeline
